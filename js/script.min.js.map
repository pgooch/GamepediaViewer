{"version":3,"sources":["script.js"],"names":[],"mappings":"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","file":"script.min.js","sourcesContent":["/*\n\tData Source Settings\n\n\tThese are the settings that control where the viewer gets the Gamepeida Database from. They will be asked to either \n\tselect a static file or link to their Dropbox depending on what data is available. This setting can be cleared on \n\tthe \"settings\" page if they change their mind later.\n*/\nvar _source = {\n\t'dropbox': {\n\t\t'appKey': 'ntx4wxyoxtd0m6d',\n\t\t'oAuthRedirect': 'https://pgooch.github.io/GamepediaViewer/',\n\t},\n\t'static': {\n\t\t'file': 'static-data/Database.gamepd',\n\t\t'covers': 'static-data/Covers/',\n\t\t'note': 'This is a copy of my personal database from 10/29/16. You can use this is you don\\'t have a dataset synced with dropbox and want to see the viewer in action.',\n\t}\n}\n/*\n\tField Data\n\n\tThis is the data that controls what fields show and how they show. This also contains a place to hard-code Custom \n\tField names and an option to show everything not in the list using the table column name.\n*/\nvar _fieldData = {\n\t'_showAll': false,\n\t'ZCOMPLETED' \t\t:{'name':'Completed'\t,'display':'boolean'\t},\n\t'ZLOCATION'\t\t\t:{'name':'Location'\t\t\t\t\t\t\t\t},\n\t// Title Details\n\t'ZPLATFORM' \t\t:{'name':'Platform'\t\t\t\t\t\t\t\t},\n\t'ZFORMAT' \t\t\t:{'name':'Format'\t\t\t\t\t\t\t\t},\n\t'ZDEVELOPER' \t\t:{'name':'Developer'\t\t\t\t\t\t\t},\n\t'ZPUBLISHER' \t\t:{'name':'Publisher'\t\t\t\t\t\t\t},\n\t'ZRATED' \t\t\t:{'name':'Rated'\t\t\t\t\t\t\t\t},\n\t'ZRELEASEDATE'\t\t:{'name':'Release Date'\t,'display':'date'\t\t},\n\t// Purchase Details\n\t'ZCONDITION' \t\t:{'name':'Condition'\t\t\t\t\t\t\t},\n\t'ZPRICE'\t\t\t:{'name':'Price'\t\t,'display':'price'\t\t},\n\t'ZPURCHASEDAT'\t\t:{'name':'Purchased At'\t\t\t\t\t\t\t},\n\t'ZPURCHASEDON'\t\t:{'name':'Purchase On'\t,'display':'date' \t\t},\n\t'ZPAID'\t\t\t\t:{'name':'Price Paid'\t,'display':'price'\t\t},\n\t'ZUPC'\t\t\t\t:{'name':'UPC'\t\t\t\t\t\t\t\t\t},\n\t// Borrow Details\n\t'ZBORROWEDBY'\t\t:{'name':'Borrowed By'\t\t\t\t\t\t\t},\n\t'ZBORROWEDON'\t\t:{'name':'Borrowed on'\t,'display':'date'\t\t},\n\t// Long Texts\n\t'ZSUMMARY'\t\t\t:{'name':'Summary'\t\t,'display':'longtext'\t},\n\t'ZCOMMENTS'\t\t\t:{'name':'Comments'\t\t,'display':'longtext'\t},\n\t// Custom Fields\n\t'ZCUSTOM1'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOM2'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOM3'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOM4'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOM5'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOM6'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOM7'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOM8'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOM9'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOM10'\t\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOMCHECKBOX1'\t:{'name':''\t\t\t\t, 'display':'boolean'\t},\n\t'ZCUSTOMCHECKBOX2'\t:{'name':''\t\t\t\t, 'display':'boolean'\t},\n\t'ZCUSTOMDATE1'\t\t:{'name':''\t\t\t\t, 'display':'date'\t\t},\n\t'ZCUSTOMDATE2'\t\t:{'name':''\t\t\t\t, 'display':'date'\t\t},\n\t'ZCUSTOMTAG1'\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOMTAG2'\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOMTEXT1'\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t'ZCUSTOMTEXT2'\t\t:{'name':''\t\t\t\t\t\t\t\t\t\t},\n\t// Add/Edit Details\n\t'ZDATEADDED'\t\t:{'name':'Date Added'\t,'display':'datetime'\t},\n\t'ZDATEEDITED'\t\t:{'name':'Date Edited'\t,'display':'datetime'\t},\n\t// The conver will always show at the bottom of the page (because it requires a second load and can be a bit slow.)\n\n}\n/*\n\tGamepeida Viewer Constants and Varibles\n\n\tThese are values that are needed by the viewer (things like the Mac epoch offset) and should not need to be changed.\n\tThey also contain varibles that are populated on initialization that should be left blank.\n*/\nvar _pediaviewerConst = {\n\t'doghouseIDStart': 1000000000,\n\t'macEpochOffset': 978307200*1000, // OSX uses a different epoch because it wants to be special\n}\nvar _db = {'hasNotBeenLoaded':true};\nvar _platforms = [];\n\n// We are going to want to update this value so we can reset the position after the load (since the load tie can mess with the browsers normal position returning)\nvar _currentListPosition = window.scrollY;\nwindow.onscroll = function(){\n\t// We only want to update this on the listing view and only if it is not loading\n\tif(window.location.hash.replace('#','')=='' && document.body.className==''){\n\t\t_currentListPosition=window.scrollY\n\t}\n};\n\n// Prep some stuff for the pagination system\nvar _totalTitleCount = 0;\ntry{\n\tvar _resultsPerPage = JSON.parse(localStorage['pagination']);\n\t_resultsPerPage = _resultsPerPage.results_per_page\n}catch(e){\n\tvar _resultsPerPage = 50;\n}\nvar _currentPage = 1;\n\n// We want to prevent multiple rapidly firing renders, especially on the test filter, as it kills mobile (the SQL isn't exactly light) these do that\nvar _lastUpdateAttempt = 0;\nvar _preventRapidUpdates = function(){\n\tif(Date.now()-_renderDelay>=_lastUpdateAttempt){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n}\nvar _renderDelay = 333; // This is the ammount of time allowed between presses before it decides to render, to long feels wird, to short and you render a ton causing issues on mobile\n\n/*\n\t//!\\\\ These are just some pre-check while things are being developed and do not really need to be messed with (but should be gone by the time this gets put into gituhb).\n*/\n//\tconsole.log(_source);\n//\tconsole.log(_pediaviewerConst);\n//\tconsole.log(_fieldData);\n//\tconsole.log(''); console.log(''); console.log('');\n\n/*\n\tThis is the hash watcher, it watches the hash for changes and does stuff when it changes.\n*/\nfunction hashWatcher(){\n\t// We are going to look at the hash before any numbers (because titles use nubmers after the part we don't care about)\n\tdocument.body.className = 'loading';\n\t// We put this in a super fast timeout so the brower has a moment to add the class before it gets distracted working on the render\n\tsetTimeout(function(){\n\t\tswitch(window.location.hash.substr(1).split(/-?\\d+/)[0]){\n\t\t\tcase 'select-source':\n\t\t\t\tReactDOM.render(<SelectSource />,document.getElementById('container'));\n\t\t\tbreak;\n\t\t\tcase 'load-dropbox':\n\t\t\t\tprepareDropbox();\n\t\t\tbreak;\n\t\t\tcase 'load-static':\n\t\t\t\tprepareStatic();\n\t\t\tbreak;\n\t\t\tcase '':\n\t\t\t\tloadDatabase(function(){\n\t\t\t\t\tReactDOM.render(<MainView />,document.getElementById('container'));\n\t\t\t\t});\n\t\t\tbreak;\n\t\t\tcase 'title':\n\t\t\t\tloadDatabase(function(){\n\t\t\t\t\tReactDOM.render(<DetailView />,document.getElementById('container'));\n\t\t\t\t});\n\t\t\tbreak;\n\t\t\tcase 'settings':\n\t\t\t\tloadDatabase(function(){\n\t\t\t\t\tReactDOM.render(<SettingsView />,document.getElementById('container'));\n\t\t\t\t});\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tReactDOM.render(<Error404 />,document.getElementById('container'));\n\t\t\tbreak;\n\t\t}\n\t},1);\n};\nwindow.onhashchange = hashWatcher;\n\n/*\n\tGlobal componentDidMount\n\n\tThis should be dropped in as the componentDidMount for all pages. It removed the loading class and fixes the screen \n\tposition if needed. If a function requires a componentDidMount then it can have one as an anonymous function, but \n\tthis should still be called in it.\n*/\nvar componentDidMountGlobal = function(){\n\tdocument.body.className = '';\n\t// If it's the homepage go back to the position we know, otherwise just go to top\n\tif(_currentListPosition!=null && _currentListPosition!=undefined && window.location.hash.replace('#','')==''){\n\t\twindow.scroll(0,_currentListPosition);\n\t}else{\n\t\twindow.scroll(0,0);\n\t}\n}\n\n/*\n\tThis is the initialzation function. This function will be called multiple times during the initial setup in order to \n\tget everything ready for the app to use. First it will check for a source and propt the user to select one (local or \n\tlog in with dropbox depending on settings). After that it attempt to get/load the database (and the cover directory \n\tif using dropbox). On it's final call it will start the view process.\n*/\nfunction initialize(){\n\n\t// First things first lets toss up the loading screen\n\tdocument.body.className = 'loading';\n\n\t// If the hash starts with an access_token then we should take care of that\n\tif(window.location.hash.substr(0,13)=='#access_token'){\n\t\t// Loop through the hash, break it up, and look for that access_token and it's value, it's gonna go into localStorage\n\t\tvar hash = window.location.hash.substr(1).split('&');\n\t\thash = hash[0].split('=');\n\t\tlocalStorage['dropbox_access_token'] = hash[1];\n\t\t// Re-call the init function now with the localStorage data is needs to get past this part\n\t\twindow.location.hash = 'load-dropbox';\n\t}else\n\n\t// Now lets see if we have a database_source set in the localStorage and if we have already asked for it, if not we need to ask\n\tif(window.location.hash!='#select-source' && localStorage['database_source']==undefined){\n\t\twindow.location.hash = 'select-source';\n\t}\n\t\n\t// otherwise just fire off the haswatcher function and let it do what it does\n\telse{\n\t\thashWatcher();\n\t}\n\n}\n\n/*\n\tThis function will make a couple calls to the dropbox API to get the database and covers directory locations. Once \n\tit has gathered all the details it needs it will clear the hash (which will call the main listing page).\n*/\nfunction prepareDropbox(){\n\t// We're going to make a AJAX call to the Dropboxv2 API\n\tvar r = new XMLHttpRequest();\n\tr.addEventListener('load',function(){\n\t\t// If things look good...\n\t\tif(this.readyState==4 && this.status==200){\n\t\t\t// Loop through the returned results and find the correct one\n\t\t\tvar data = JSON.parse(this.response);\n\t\t\tvar found = false;\n\t\t\tfor(var i in data.matches){\n\t\t\t\tif(data.matches[i].metadata.name=='Database.gamepd'){ // No way to tell DB I want this exact file name, so we have to make sure we arn'y getting a backup\n\t\t\t\t\t// Were going to store this in localStorage for future use, but we want to get the directory path before we do so we can use it later\n\t\t\t\t\tlocalStorage['database_path'] = data.matches[i].metadata.path_display;\n\t\t\t\t\tlocalStorage['covers_dir_path'] = data.matches[i].metadata.path_display.replace(/Database.gamepd$/i,'')+'Covers/';\n\t\t\t\t\tlocalStorage['database_source'] = 'dropbox';\n\t\t\t\t\tfound = true;\n\t\t\t\t\twindow.location.hash = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\t// In case we didn't find it lets toss an error\n\t\t\tif(!found){\n\t\t\t\talert('Unable to find the proper pedia database. Check the console.log for what we did find.');\n\t\t\t\tconsole.log('No \"Database.gamepd\" was found, instead we did get the following from dropbox.');\n\t\t\t\tconsole.log(this.responseText);\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t// Super basic error handeling...\n\t\t}else{\n\t\t\talert('Unable to find pedia database. Check the console log for more information.');\n\t\t\tconsole.log('There was an error searching for \".gamepd\" to find the pedia database.');\n\t\t\tconsole.log(this.responseText);\n\t\t\tconsole.log(this);\n\t\t}\n\t});\n\tr.open('POST','https://api.dropboxapi.com/2/files/search');\n\tr.setRequestHeader(\"Authorization\",'Bearer '+localStorage['dropbox_access_token']);\n\tr.setRequestHeader(\"Content-Type\",'application/json');\n\tr.send(JSON.stringify({'query':'Database.gamepd','path':''}));\n}\n/*\n\tPreparing to load the static file is much simpler and simple check if it can find the file or not.\n*/\nfunction prepareStatic(){\n\t// Simple AJAX check to see if we can access the file, error if not, update if localStorage[database_source] is yes.\n\tvar r = new XMLHttpRequest();\n\tr.addEventListener('load',function(){\n\t\tif(this.readyState==4 && this.status==200){\n\t\t\tlocalStorage['database_source'] = 'static';\n\t\t\tlocalStorage['database_path'] = _source.static.file;\n\t\t\tlocalStorage['covers_dir_path'] = _source.static.covers;\n\t\t\twindow.location.hash = '';\n\t\t}else{\n\t\t\talert('Unable to load pedia database. Check the console log for more information.');\n\t\t\tconsole.log('There was an error loading the static database at \"'+_source.static.file+'\".');\n\t\t\tconsole.log(this);\n\t\t}\n\t});\n\tr.open('HEAD',_source.static.file);\n\tr.send();\n}\n\n/*\n\tThis function will check if the DB is already loaded, and if not load it. It will return the DB object that can then \n\tbe passed to the renderer.\n*/\nfunction loadDatabase(callback){\n\tif(_db.hasNotBeenLoaded==true){\n\n\t\t// If the database is not loaded lets do that\n\t\tvar call = localStorage['database_path'];\n\n\t\t// If we are actually loading from dropbox then lets change some things up\n\t\tif(localStorage['database_source']=='dropbox'){\n\t\t\tcall = 'https://content.dropboxapi.com/2/files/download';\n\t\t\tvar dropboxRequestHeader = JSON.stringify({\n\t\t\t\t'path': localStorage.database_path\n\t\t\t});\n\t\t}\n\n\t\t// Get the HTTPRequest Ready\n\t\tvar r = new XMLHttpRequest();\n\t\t// Process the GET return\n\t\tr.addEventListener('load',function(){\n\n\t\t\t// Prep and create the DB in PV.DB for future queries.\n\t\t\tvar preparedDB = new Uint8Array(this.response);\n\t\t\t_db = new SQL.Database(preparedDB);\n\n\t\t\t// Get the list of platforms, store them int PV.platforms, pass we will grab them from window later\n\t\t\t_platforms = [];\n\t\t\tvar platforms = _db.exec('select `ZPLATFORM` from `ZENTRY` where `ZUID` < '+_pediaviewerConst.doghouseIDStart+' group by (`ZPLATFORM`) order by `ZPLATFORM`');\n\t\t\tfor(var pn in platforms[0]['values']){\n\t\t\t\t_platforms.push(platforms[0]['values'][pn][0]);\n\t\t\t}\n\n\t\t\t// Get the total title count\n\t\t\tvar query = _db.prepare('select count(\"a\") as \"entries\" from `ZENTRY` where `ZSTATUS` in(0,1) and `ZUID`<'+_pediaviewerConst.doghouseIDStart+' group by(\"a\") COLLATE NOCASE');\n\t\t\tquery.step();\n\t\t\t_totalTitleCount = query.getAsObject().entries;\n\n\n\t\t\t// IF we have a callback then call it\n\t\t\tif(typeof callback == 'function'){\n\t\t\t\tcallback();\n\t\t\t}\n\t\t\n\t\t});\n\t\t// make the files (GET) call\n\t\tr.open('GET',call);\n\t\tr.responseType = 'arraybuffer'; // Since this is going to be used to call the DB file and the images it needs to be binary safe.\n\t\t// These header will be all borked if your loading from a local source, but thats OK, the local source won't care.\n\t\tr.setRequestHeader(\"Authorization\",'Bearer '+localStorage['dropbox_access_token']);\n\t\tr.setRequestHeader(\"Dropbox-API-Arg\",dropboxRequestHeader);\n\t\tr.send();\n\n\t// If the DB has already been loaded one then just fire the callback\n\t}else{\n\t\tif(typeof callback == 'function'){\n\t\t\tcallback();\n\t\t}\n\t}\n}\n\n/*\n\tThis is the 404 page, just a static page with a link to the home listing\n*/\nvar Error404 = React.createClass({\n\trender: function(){\n\t\treturn (<div>\n\t\t\t<h1>Page Not found.</h1>\n\t\t\t<p>\n\t\t\t\tThe requested page, {window.location.hash.substr(1).split(/-?\\d+/)[0]}, could not be found.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tWould like to go back to the <a href=\"#\">home page</a> or reset things from the <a href=\"#settings\">settings page</a>?\n\t\t\t</p>\n\t\t</div>);\n\t},\n\tcomponentDidMount: componentDidMountGlobal,\n});\n\n/*\n\tIf you haven't logged in the Dropbox (or we cleared it out) then we need a special link to get connected.\n*/\nvar SelectSource = React.createClass({\n\trender: function(){\n\n\t\tvar staticSourceNote = '';\n\t\tif(_source.static.note!=''){\n\t\t\tstaticSourceNote = <span className=\"static-load-note\">{_source.static.note}</span>\n\t\t}\n\n\t\treturn (<div className=\"select-source-page\">\n\t\t\t<h1>Select a Data Source</h1>\n\t\t\t<p>\n\t\t\t\tGamepedia viewer can load your database from your Dropbox account. It's suggested that you use this \n\t\t\t\tmethod so the data is always up to date. If you do not have your Gamepedia data synced with Dropbox you \n\t\t\t\tcan learn how to to that in the <a href=\"https://www.bruji.com/help/gamepedia/configure/database.html\" target=\"_blank\">Gamepedia Help</a>.\n\t\t\t</p>\n\t\t\t<p className=\"source-link link-dropbox\">\n\t\t\t\t<a href={'https://www.dropbox.com/oauth2/authorize?response_type=token&client_id='+_source.dropbox.appKey+'&redirect_uri='+_source.dropbox.oAuthRedirect}>Log in with Dropbox</a>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tIf you don't have your Gamepedia database synced with dropbox, or don't have a Gamepedia database at all, \n\t\t\t\tyou can load one from a static location. This database may be out of date, for the latest data you should \n\t\t\t\tsync your database with dropbox.\n\t\t\t</p>\n\t\t\t<p className=\"source-link link-static\">\n\t\t\t\t <a href=\"#load-static\">Load Static Database</a>\n\t\t\t\t {staticSourceNote}\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tYour selection will be saved and you shouldn't be asked again. If you would like to change your selection \n\t\t\t\tin the future you can do so on the \"Settings\" page, a link to which is located at the bottom of the page.\n\t\t\t</p>\n\t\t</div>);\n\t},\n\tcomponentDidMount: componentDidMountGlobal,\n});\n\n/*\n\tThis is the main container for the game listing it calls three sub-parts one of the filters, one for the actual \n\tlisting, and one for the footer (w/ settings link in it among other things.)\n*/\nvar MainView = React.createClass({\n\t// Set the inital state, this controls both the DB and the filters\n\tgetInitialState: function(){\n\t\t\n\t\t// The true default state\n\t\tvar state = {\n\t\t\t'filters': {\n\t\t\t\t'search': '',\n\t\t\t\t'platform': '~All',\n\t\t\t\t'list': '0,1',\n\t\t\t},\n\t\t\t'pg': _currentPage,\n\t\t}\n\n\t\t// Check the localStorage for some saved filters\n\t\tif(localStorage['current_filters']!=undefined){\n\t\t\t// It's not important if this fails, so just try and do nothing on catch\n\t\t\ttry{\n\t\t\t\tstate.filters = JSON.parse(localStorage['current_filters']);\n\t\t\t}catch(e){}\n\t\t}\n\n\t\t// Return the state\n\t\treturn state\n\t},\n\t\n\t// Update the filters (they propagate up to this directly).\n\tupdateFilter: function(e){\n\n\t\t// Get the state so we can modify it at a deeper level\n\t\tvar state = this.state\n\n\t\t// update the state, including reseting the page number\n\t\tstate.filters[e.target.id] = e.target.value;\n\t\tstate.pg = 1;\n\t\t_currentPage = 1;\n\n\t\t// Update the localStorage of the state\n\t\tlocalStorage['current_filters'] = JSON.stringify(state.filters);\n\t\t\n\t\t// Finally set the state\n\t\t_lastUpdateAttempt = Date.now();\n\t\tthis.setState(state);\n\n\t\t// Wait the predetermined amount of time then try and render again, only the last one should fire\n\t\tsetTimeout(function(){\n\t\t\tthis.forceUpdate();\n\t\t}.bind(this),_renderDelay);\n\t},\n\t\n\t// Change the page for pagination, simple state update really\n\tchangePage: function(pg,total){\n\t\tif(pg>0&&pg<=total){\n\t\t\tvar state = this.state\n\t\t\tstate['pg'] = pg;\n\t\t\t_currentPage = pg;\n\t\t\twindow.scroll(0,0);\n\t\t\tthis.setState(state); \n\t\t}\n\t},\n\t\n\t// The renderer, obviously, renders\n\trender: function(){\n\t\treturn (<div>\n\t\t\t<div id=\"list-view\">\n\t\t\t\t<Filter updateFilter={this.updateFilter} filters={this.state.filters} />\n\t\t\t\t<List filters={this.state.filters} page={this.state.pg} />\n\t\t\t</div>\n\t\t\t<Pagination page={this.state.pg} changePage={this.changePage} filters={this.state.filters} />\n\t\t\t<Footer />\n\t\t</div>);\n\t},\n\tcomponentDidMount: componentDidMountGlobal,\n});\n/*\n\tFor the above, this is the filters set. The updateFilter function is in the GameList component\n*/\nvar Filter = React.createClass({\n\trender: function(){\n\t\treturn (<div id=\"filter-box\">\n\t\t\t<label htmlFor=\"search\">\n\t\t\t\tSearch\n\t\t\t\t<input ref=\"search\" type=\"text\" id=\"search\" onChange={this.props.updateFilter} value={this.props.filters.search} />\n\t\t\t</label>\n\t\t\t<label htmlFor=\"platform\">\n\t\t\t\tPlatform\n\t\t\t\t<select ref=\"platform\" id=\"platform\" onChange={this.props.updateFilter} value={this.props.filters.platform} >\n\t\t\t\t\t<option value=\"~All\">All Platforms</option>\n\t\t\t\t\t{_platforms.map(function(platform,n){\n\t\t\t\t\t\treturn (<option key={platform} value={platform}>{platform}</option>);\n\t\t\t\t\t})} \n\t\t\t\t</select>\n\t\t\t</label>\n\t\t\t<label htmlFor=\"list\">\n\t\t\t\tListed In\n\t\t\t\t<select ref=\"list\" id=\"list\" onChange={this.props.updateFilter} value={this.props.filters.list} >\n\t\t\t\t\t<option value=\"0,1\">All Owned</option>\n\t\t\t\t\t<option value=\"1\">On Loan</option>\n\t\t\t\t\t<option value=\"0\">On Hand</option>\n\t\t\t\t\t<option value=\"2\">Wishlist</option>\n\t\t\t\t</select>\n\t\t\t</label>\n\t\t</div>);\n\t},\n});\n/*\n\tThis contains the actual table listing out the items in it. Note that no all fiels are pulled only the ones were actually going to use, \n\tthat should keep things cleaner on the listing.\n*/\nvar List = React.createClass({\n\t\n\t// This will check if you are holding a modifier to open it in a new window.tab\n\topenDetailsPage: function(event,result){\n\n\t\t// Figure out what the new hash is\n\t\tvar newHash = 'title-'+result.ZUID+'-'+result.ZTITLE.toLowerCase().replace(/[^\\d\\w]+/g,'-')\n\t\t\n\t\t// If a modifier was held new window it, otherwise just hash change.\n\t\tif(event.ctrlKey || event.altKey || event.metaKey){\n\t\t\twindow.open(window.location.href.replace('#','')+'#'+newHash);\n\t\t}else{\n\t\t\twindow.location.hash = newHash;\n\t\t}\n\n\t},\n\n\trender: function(){\n\t\t\n\t\t// I can't seem to find a built-in escape, so I guess I'll do something a little quick and ugly\n\t\tvar term = this.props.filters.search.replace(/([\\[\\]&_\\\\/%])/g,'\\\\$1');\n\t\tvar platform = this.props.filters.platform.replace(/([\\[\\]&_\\\\/%])/g,'\\\\$1');\n\t\tvar list = this.props.filters.list.replace(/([\\[\\]&_\\\\/%])/g,'\\\\$1');\n\n\t\t// Get the number of results per page\n\t\ttry{\n\t\t\tvar resultsPerPage = JSON.parse(localStorage['pagination']);\n\t\t\tresultsPerPage = resultsPerPage.results_per_page\n\t\t}catch(e){\n\t\t\t// must have errored, probably not there, use the default\n\t\t\tvar resultsPerPage = 50;\n\t\t}\n\n\t\t// Prepare the DB call, turn the results into something we can map\n\t\tvar query = _db.prepare('select `ZUID`,`ZCOMPLETED`,`ZTITLE`,`ZEDITION`,`ZPLATFORM` from `ZENTRY` where `ZTITLE` like \"%'+term+'%\" escape \"\\\\\" '+(platform!='~All'?' and  `ZPLATFORM` = \"'+platform+'\"':'')+' and `ZSTATUS` in('+list+') and `ZUID`<'+_pediaviewerConst.doghouseIDStart+' order by `ZTITLE` COLLATE NOCASE limit '+((this.props.page-1)*resultsPerPage)+', '+resultsPerPage);\n\t\tvar results = [];\n\t\twhile(query.step()){\n\t\t\tresults.push( query.getAsObject( ));\n    \t}\n\n    \t// Resnder out a no results found message\n    \tif(results.length==0){\n\t        // return the list\n\t\t\treturn (<ul id=\"title-list\">\n\t\t\t\t<li className=\"no-results\">No results were found matching your current filter criteria.</li>\n\t\t\t</ul>);\n\t\t// do the normal results render\n    \t}else{\n\t        // return the list\n\t\t\treturn (<ul id=\"title-list\" className={this.props.filters.platform!='~All'?'platformed':''} >\n\t\t\t\t{results.map(function(result){\n\t\t\t\t\treturn (<li key={String(result.ZUID)} className={result.ZCOMPLETED==1?'completed':''}>\n\t\t\t\t\t\t<a href={'#title-'+result.ZUID+'-'+result.ZTITLE.toLowerCase().replace(/[^\\d\\w]+/g,'-')}>\n\t\t\t\t\t\t\t<b>{result.ZTITLE}</b>\n\t\t\t\t\t\t\t<i>{result.ZEDITION}</i>\n\t\t\t\t\t\t\t<span className=\"plat\">{result.ZPLATFORM}</span>\n\t\t\t\t\t\t\t<div style={{'clear':'both'}}></div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>)\n\t\t\t\t}.bind(this))}\n\t\t\t</ul>);\n    \t}\n\t},\n\tshouldComponentUpdate: _preventRapidUpdates,\n});\n\n/*\n\tThe footer, used on both the list and details view, at the bottom.\n*/\nvar Footer = React.createClass({\n\trender: function(){\n\n\t\t// Get the last title added (for funsies)\n\t\tvar query = _db.prepare('select * from `ZENTRY` where `ZSTATUS` in(0,1) and `ZUID`<'+_pediaviewerConst.doghouseIDStart+' order by `ZUID` desc limit 1');\n\t\tquery.step();\n\t\tvar latestTitle = query.getAsObject();//.entries;\n\n\t\t// REturn the stimple footer\n\t\treturn (<div id=\"footer\">\n\t\t\t<p className=\"entries-line\">Currently {_totalTitleCount} in collection.</p>\n\t\t\t<p className=\"nav-links\">\n\t\t\t\t<a href=\"#\" className=\"footer-link\">Main List</a>\n\t\t\t\t &ndash; \n\t\t\t\t<a href=\"#settings\" className=\"footer-link\">Settings</a>\n\t\t\t\t &ndash; \n\t\t\t\t<a href={'#title-'+latestTitle.ZUID+'-'+latestTitle.ZTITLE.toLowerCase().replace(/[^\\d\\w]+/g,'-')} className=\"footer-link\">Latest Entry</a>\n\t\t\t</p>\n\t\t\t<p><a href=\"https://github.com/pgooch/GamepediaViewer\" className=\"github-link\" target=\"_blank\">Fork Gamepedia Viewer on GitHub.</a></p>\n\t\t</div>);\n\t},\n\tshouldComponentUpdate: function(){return false},\n});\n\n/*\n\tThe footer, used on both the list and details view, at the bottom.\n*/\nvar Pagination = React.createClass({\n\trender: function(){\n\n\t\t// Determine the number of pages in the current filter, bits ripped from the main list renderer\n\t\tvar term = this.props.filters.search.replace(/([\\[\\]&_\\\\/%])/g,'\\\\$1');\n\t\tvar platform = this.props.filters.platform.replace(/([\\[\\]&_\\\\/%])/g,'\\\\$1');\n\t\tvar list = this.props.filters.list.replace(/([\\[\\]&_\\\\/%])/g,'\\\\$1');\n\t\tvar query = _db.prepare('select count(\"a\") as \"entries\" from `ZENTRY` where `ZTITLE` like \"%'+term+'%\" escape \"\\\\\" '+(platform!='~All'?' and  `ZPLATFORM` = \"'+platform+'\"':'')+' and `ZSTATUS` in('+list+') and `ZUID`<'+_pediaviewerConst.doghouseIDStart);\n\t\tquery.step();\n\t\tvar filteredResults = query.getAsObject().entries;\n\n\t\t// Determine the total number of pages\n\t\tvar _totalPages = Math.ceil(filteredResults/_resultsPerPage);\n\n\t\t// Return\n\t\treturn (<div id=\"pagination\">\n\t\t\t<span onClick={()=>this.props.changePage(this.props.page-1,_totalPages)} className={'pagination-link prev '+(this.props.page<=1?'disable':'')}>Prev</span>\n\t\t\t<span className=\"pagination-line\">Page {this.props.page} of {Math.max(1,_totalPages)}</span>\n\t\t\t<span onClick={()=>this.props.changePage(this.props.page+1,_totalPages)} className={'pagination-link next '+(this.props.page>=_totalPages?'disable':'')}>Next</span>\n\t\t\t<div style={{clear:'both'}}></div>\n\t\t</div>);\n\t},\n\tshouldComponentUpdate: _preventRapidUpdates,\n});\n\n/*\n\tThis is the options page view\n*/\nvar SettingsView = React.createClass({\n\t\n\t// Get the defaults for the filter\n\tgetInitialState: function(){\n\n\t\t// This is the initialState\n\t\tvar state = {};\n\n\t\t// Were gonna go ahead and load everything into the state, since it shouldent be to much.\n\t\tObject.keys(localStorage).map(function(key){\n\n\t\t\t// Check fi what were gonna load is something that can be parsed from JON\n\t\t\ttry{\n\t\t\t\tvar tryParse = JSON.parse(localStorage[key]);\n\t\t\t\tstate[key] = tryParse;\n\t\t\t}catch(e){\n\t\t\t\tstate[key] = localStorage[key];\n\t\t\t}\n\t\t}.bind(state));\n\n\t\t// return the initial state\n\t\treturn state;\n\t},\n\n\t// This will update the localStorage (and hence the settings) with the new values\n\tupdateSettings: function(e){\n\t\t// Get the state\n\t\tvar state = this.state\n\n\t\t// Get the key, the saveAs from the key, and create a blank save object we can update if we have some already saved data\n\t\tvar key = e.target.getAttribute('name').split('-');\n\t\tvar saveAs = key[0];\n\t\tkey = key[1];\n\t\tvar saveData = {};\n\t\tvar saveValue = e.target.value;\n\n\t\t// Update the saveValue if were dealing with a checkbox or radio\n\t\tif(e.target.type=='checkbox' || e.target.type=='radio'){\n\t\t\tsaveValue = e.target.checked;\n\t\t}\n\n\t\t// Check the state to make sure we have sometihng to store into, create if missing. Then update the saveData\n\t\tif(state[saveAs]==undefined){\n\t\t\tstate[saveAs] = {};\n\t\t}\n\t\tsaveData = state[saveAs];\n\n\t\t// Update the save data and then save it\n\t\tsaveData[key] = saveValue\n\t\tstate[saveAs][key] = saveValue;\n\t\tlocalStorage[saveAs] = JSON.stringify(saveData);\n\n\t\t// and update the state\n\t\tthis.setState(state);\n\t},\n\n\t// This will confirm before clear out your dropbox info and redirecting you the list\n\tupdateDataSource: function(){\n\t\tif(confirm('Are you sure you want to change your data source?'+\"\\n\\n\"+'You may be required to re-link Gamepeida Viewer with your dropbox account.')){\n\t\t\tlocalStorage.removeItem('database_source');\n\t\t\twindow.location.hash = 'select-source';\n\t\t\twindow.location.reload();\n\t\t}\n\t},\n\n\t// Output the settings page\n\trender: function(){\n\t\treturn (<div id=\"settings\">\n\t\t\t<h1>Settings</h1>\n\t\t\t\n\t\t\t<h2>Custom Field Names</h2>\n\t\t\t<p className=\"setting-note\">\n\t\t\t\tThese are the labels that will be used for custom fields. If these are left blank they will not be displayed even if there is data for the title.\n\t\t\t</p>\n\t\t\t<div className=\"settings-fields\">\n\t\t\t\t{Object.keys(_fieldData).map(function(key){\n\t\t\t\t\t// We only want to loop through the custom fields\n\t\t\t\t\tif(key.substr(0,7)=='ZCUSTOM'){\n\n\t\t\t\t\t\t// Clean up the title some and return\n\t\t\t\t\t\tvar title = 'Custom '+key.substr(7).toLowerCase().replace(/(\\d+)/,' $1').replace(/\\b[a-z]/g,function(letter){return letter.toUpperCase();});\n\t\t\t\t\t\treturn <label htmlFor={'custom-field-name-'+key} key={'custom-field-name-'+key}>\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t<input type=\"text\" name={'custom_field_names-'+key} id={'custom-field-name-'+key} defaultValue={this.state.custom_field_names!=undefined?this.state.custom_field_names[key]:''} placeholder={_fieldData[key].name!=''?_fieldData[key].name:''} onChange={this.updateSettings} />\n\t\t\t\t\t\t</label>\n\n\t\t\t\t\t}\n\t\t\t\t}.bind(this))}\n\t\t\t\t<label className=\"checkbox\" htmlFor=\"show-with-default\">\n\t\t\t\t\t<input type=\"checkbox\" name=\"custom_field_names-showWithoutNames\" id=\"show-with-default\" value=\"yes\" defaultChecked={this.state.custom_field_names==undefined?false:this.state.custom_field_names.showWithoutNames} onChange={this.updateSettings} /> Show custom fields with default names when a custom name has not been set.\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<h2>Pagination</h2>\n\t\t\t<p className=\"setting-note\">\n\t\t\t\tHow many results show per page. This number can be set to something artifically high to show everything on a single page, however mobile devices tend to become unstable with higher values\n\t\t\t</p>\n\t\t\t<div className=\"settings-fields\">\n\t\t\t\t<label htmlFor=\"pagination-results_per_page\">\n\t\t\t\t\tResults Per Page\n\t\t\t\t\t<input type=\"number\" min=\"1\" step=\"1\" name=\"pagination-results_per_page\" id=\"pagination-results_per_page\" defaultValue={(this.state.pagination==undefined?50:this.state.pagination.results_per_page)} onChange={this.updateSettings} />\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<h2>Change Data Source</h2>\n\t\t\t<p className=\"setting-note\">\n\t\t\t\tIf you would like to chage the data source from the currently selected {localStorage.database_source} one you can do so by click the button below.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<input type=\"button\" className=\"reset-button\" value=\"Reset Data Source\" onClick={this.updateDataSource} />\n\t\t\t</p>\n\n\t\t\t<Footer />\n\n\t\t</div>);\n\t},\n\t// We don't actually need to update the interface, the user is going to be doing a pretty good job of that on their own and preventing the re-render will make things smoother\n\tshouldComponentUpdate: function(){\n\t    return false;\n\t},\n\tcomponentDidMount: componentDidMountGlobal,\n});\n\n/*\n\tThis is the view for a specific titles details page\n*/\nvar DetailView = React.createClass({\n\t// The renderer, obviously, renders\n\trender: function(){\n\n\t\t//Using the ID in the hash load all the details for the specific entry.\n\t\tvar query = _db.prepare('select * from `ZENTRY` where `ZUID` = '+window.location.hash.match(/-(\\d+)-/)[1]);\n\t\tquery.step();\n\t\tvar details = query.getAsObject( );\n\n\t\t// Were going to use a key in the DB to determine if we found a title, this should at least exist, so if it's missing the title is not in the DB\n\t\tif(details.Z_PK==undefined){\n\t\t\treturn (<div id=\"details-container\">\n\t\t\t\t<h1>404<i>Could not find the requested title.</i></h1>\n\t\t\t\t<Footer />\n\t\t\t</div>);\n\n\t\t// Key exists so the title is in the DB\n\t\t}else{\n\n\t\t\t// Bulk of the display work is dont in the return\n\t\t\treturn (<div id=\"details-container\">\n\t\t\t\t<h1>{details.ZTITLE} <i>{details.ZEDITION}</i></h1>\n\t\t\t\t<ul className=\"detail-items\">\n\t\t\t\t\t{Object.keys(details).map(function(key){\n\n\t\t\t\t\t\t// Three important vars, the classes applies to the li, the key, and the value\n\t\t\t\t\t\tvar classes = [];\n\t\t\t\t\t\tvar dispKey = key;\n\t\t\t\t\t\tvar dispVal = details[key];\n\n\t\t\t\t\t\t// Get the localStorage custom Field Names and parse them\n\t\t\t\t\t\tvar custom_field_names = localStorage.custom_field_names;\n\t\t\t\t\t\tif(custom_field_names!=undefined){\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tcustom_field_names = JSON.parse(custom_field_names);\n\t\t\t\t\t\t\t}catch(e){\n\t\t\t\t\t\t\t\tcustom_field_names = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tcustom_field_names = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if the ket is in the _field_data use it, otherwise were going to exclude this row with a class\n\t\t\t\t\t\tif(_fieldData[key]!=undefined){\n\t\t\t\t\t\t\tdispKey = _fieldData[key].name;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tclasses.push('no-key hide-field');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If it has a name but it's blank it must be a custom, check if they set one, update and add classes as needed.\n\t\t\t\t\t\tif(custom_field_names[key]!=undefined && custom_field_names[key]!=''){\n\t\t\t\t\t\t\tdispKey = custom_field_names[key];\n\t\t\t\t\t\t}else if(_fieldData[key]==undefined || _fieldData[key].name==''){\n\t\t\t\t\t\t\tif(custom_field_names.showWithoutNames!=undefined && custom_field_names.showWithoutNames==true){\n\t\t\t\t\t\t\t\tdispKey = 'Custom '+key.substr(7).toLowerCase().replace(/(\\d+)/,' $1').replace(/\\b[a-z]/g,function(letter){return letter.toUpperCase();});\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tclasses.push('no-key no-custom-value-key hide-field');\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check that ther eis a valid value, if not hide the row in the usual class manner\n\t\t\t\t\t\tif(dispVal=='' || dispVal==null || dispVal==0){\n\t\t\t\t\t\t\tclasses.push('no-value hide-field');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Alright now lets process the value and update it as needed.\n\t\t\t\t\t\tif(_fieldData[key]!=undefined && dispVal!=null){\n\t\t\t\t\t\t\tswitch(_fieldData[key].display){\n\t\t\t\t\t\t\t\tcase 'boolean':\n\t\t\t\t\t\t\t\t\tdispVal = (dispVal==1?'Yes':'No');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'price':\n\t\t\t\t\t\t\t\t\tdispVal = '$'+dispVal.replace(/^\\$?/,'');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'longtext':\n\t\t\t\t\t\t\t\t\tdispVal = <div className=\"long-text\">{dispVal}</div>;\n\t\t\t\t\t\t\t\t\tclasses.push('long-text');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'date':\n\t\t\t\t\t\t\t\tcase 'datetime':\n\t\t\t\t\t\t\t\t\tvar d = new Date( (dispVal*1000)+_pediaviewerConst.macEpochOffset );\n\t\t\t\t\t\t\t\t\tdispVal = d.toLocaleString();\n\t\t\t\t\t\t\t\t\tif(_fieldData[key].display=='date'){ // remove the time, it's probably garbage anyway\n\t\t\t\t\t\t\t\t\t\tdispVal = dispVal.replace(/, .*/,'');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'cover':\n\t\t\t\t\t\t\t\t\tdispVal = 'Images all all sorts of fucked right now';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t// Everythign should be taken care of already.\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Now lets add one more class for the utmost in styling flexibility\n\t\t\t\t\t\tclasses.push('col-'+key);\n\n\t\t\t\t\t\t// And return the list item\n\t\t\t\t\t\treturn <li className={classes.join(' ')} key={'detail '+key}>\n\t\t\t\t\t\t\t<b>{dispKey}</b>\n\t\t\t\t\t\t\t<span>{dispVal}</span>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t<DetailCoverImage titleID={window.location.hash.match(/-(\\d+)-/)[1]} />\n\n\t\t\t\t<Footer />\n\t\t\t</div>);\n\n\t\t}\n\t},\n\tcomponentDidMount: componentDidMountGlobal,\n});\n/*\n\tFar the above, just return an appropriate cover image depending source and availability.\n*/\nvar DetailCoverImage = React.createClass({\n\t// Set the inital state, this controls both the DB and the filters\n\tgetInitialState: function(){\n\t\treturn {\n\t\t\t'id': this.props.titleID,\n\t\t\t'url': '',\n\t\t\t'found': false,\n\t\t};\n\t},\n\tcomponentWillMount: function(){\n\n\t\t// Depending on the data source get the image URL\n\t\tif(localStorage['database_source']=='dropbox'){\n\n\t\t\t// Check if we have a URL in the state\n\t\t\tvar url = 'https://api.dropboxapi.com/2/files/get_temporary_link';\n\t\t\tvar dropboxRequestHeader = JSON.stringify({\n\t\t\t\t'path': localStorage['covers_dir_path']+this.props.titleID+'.jpg'\n\t\t\t});\n\t\t\n\t\t// If not dropbox it must be static.\n\t\t}else{\n\n\t\t\t// Check if we have a URL in the state\n\t\t\tvar url = localStorage['covers_dir_path']+this.props.titleID+'.jpg';\n\t\t\tthis.setState({'url':url});\n\n\t\t}\n\n\t\t// Use a touch of ajax to check for the image\n\t\tvar r = new XMLHttpRequest();\n\t\tr.addEventListener('load',function(call){\n\n\t\t\t// Update the state with the results\n\t\t\tif(call.target.readyState==4 && call.target.status==200){\n\t\t\t\t\n\t\t\t\t// Handling the dropbox response it a bit different\n\t\t\t\tif(localStorage.database_source=='dropbox'){\n\t\t\t\t\t\n\t\t\t\t\t// Try and decode, if it isn't decoding assume it's an error\n\t\t\t\t\ttry{\n\t\t\t\t\t\tvar res = JSON.parse(call.target.response);\n\t\t\t\t\t\tthis.setState({'url':res.link});\n\t\t\t\t\t\tthis.setState({'found':true});\n\t\t\t\t\t}catch(e){\n\t\t\t\t\t\tthis.setState({'found':false});\n\t\t\t\t\t}\n\n\t\t\t\t// If it's not dropbox is must be static and static is simple\n\t\t\t\t}else{\n\t\t\t\t\tthis.setState({'found':true});\n\t\t\t\t}\n\t\t\t\n\t\t\t// If we didn't get the ol' 200 back we know it ain't gonna work\n\t\t\t}else{\n\t\t\t\tthis.setState({'found':false});\n\t\t\t}\n\n\t\t}.bind(this));\n\t\tr.open('POST',url);\n\t\t// These header will be all borked if your loading from a local source, but thats OK, the local source won't care.\n\t\tr.setRequestHeader(\"Authorization\",'Bearer '+localStorage['dropbox_access_token']);\n\t\tr.setRequestHeader(\"Content-Type\",'application/json');\n\t\tr.send(dropboxRequestHeader);\n\n\t},\n\n\trender:function(){\n\n\t\t// Only return if it was found \n\t\tif(this.state.found){\n\t\t\treturn (<div>\n\t\t\t\t<img src={this.state.url} alt=\"Cover Image\" className=\"cover-image\" />\n\t\t\t</div>)\n\t\t\n\t\t// Well, i mean, react wants _something_\n\t\t}else{\n\t\t\treturn (<div></div>);\n\t\t}\n\n\t}\n});\n\n// Now that were done with all the code lets start.\ninitialize();\n"]}