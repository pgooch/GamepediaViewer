"use strict";function hashWatcher(){document.body.className="loading",setTimeout(function(){switch(window.location.hash.substr(1).split(/-?\d+/)[0]){case"select-source":ReactDOM.render(React.createElement(SelectSource,null),document.getElementById("container"));break;case"load-dropbox":prepareDropbox();break;case"load-static":prepareStatic();break;case"":loadDatabase(function(){ReactDOM.render(React.createElement(MainView,null),document.getElementById("container"))});break;case"title":loadDatabase(function(){ReactDOM.render(React.createElement(DetailView,null),document.getElementById("container"))});break;case"settings":loadDatabase(function(){ReactDOM.render(React.createElement(SettingsView,null),document.getElementById("container"))});break;default:ReactDOM.render(React.createElement(Error404,null),document.getElementById("container"))}},1)}function initialize(){if(document.body.className="loading","#access_token"==window.location.hash.substr(0,13)){var e=window.location.hash.substr(1).split("&");e=e[0].split("="),localStorage.dropbox_access_token=e[1],window.location.hash="load-dropbox"}else"#select-source"!=window.location.hash&&void 0==localStorage.database_source?window.location.hash="select-source":hashWatcher()}function prepareDropbox(){var e=new XMLHttpRequest;e.addEventListener("load",function(){if(4==this.readyState&&200==this.status){var e=JSON.parse(this.response),t=!1;for(var a in e.matches)"Database.gamepd"==e.matches[a].metadata.name&&(localStorage.database_path=e.matches[a].metadata.path_display,localStorage.covers_dir_path=e.matches[a].metadata.path_display.replace(/Database.gamepd$/i,"")+"Covers/",localStorage.database_source="dropbox",t=!0,window.location.hash="");t||(alert("Unable to find the proper pedia database. Check the console.log for what we did find."),console.log('No "Database.gamepd" was found, instead we did get the following from dropbox.'),console.log(this.responseText),console.log(this))}else alert("Unable to find pedia database. Check the console log for more information."),console.log('There was an error searching for ".gamepd" to find the pedia database.'),console.log(this.responseText),console.log(this)}),e.open("POST","https://api.dropboxapi.com/2/files/search"),e.setRequestHeader("Authorization","Bearer "+localStorage.dropbox_access_token),e.setRequestHeader("Content-Type","application/json"),e.send(JSON.stringify({query:"Database.gamepd",path:""}))}function prepareStatic(){var e=new XMLHttpRequest;e.addEventListener("load",function(){4==this.readyState&&200==this.status?(localStorage.database_source="static",localStorage.database_path=_source.static.file,localStorage.covers_dir_path=_source.static.covers,window.location.hash=""):(alert("Unable to load pedia database. Check the console log for more information."),console.log('There was an error loading the static database at "'+_source.static.file+'".'),console.log(this))}),e.open("HEAD",_source.static.file),e.send()}function loadDatabase(e){if(1==_db.hasNotBeenLoaded){var t=localStorage.database_path;if("dropbox"==localStorage.database_source){t="https://content.dropboxapi.com/2/files/download";var a=JSON.stringify({path:localStorage.database_path})}var o=new XMLHttpRequest;o.addEventListener("load",function(){var t=new Uint8Array(this.response);_db=new SQL.Database(t),_platforms=[];var a=_db.exec("select `ZPLATFORM` from `ZENTRY` where `ZUID` < "+_pediaviewerConst.doghouseIDStart+" group by (`ZPLATFORM`) order by `ZPLATFORM`");for(var o in a[0].values)_platforms.push(a[0].values[o][0]);"function"==typeof e&&e()}),o.open("GET",t),o.responseType="arraybuffer",o.setRequestHeader("Authorization","Bearer "+localStorage.dropbox_access_token),o.setRequestHeader("Dropbox-API-Arg",a),o.send()}else"function"==typeof e&&e()}var _source={dropbox:{appKey:"t7a0jzeq04bg48c",oAuthRedirect:"https://pgooch.github.io/GamepediaViewer/"},static:{file:"static-data/Database.gamepd",covers:"static-data/Covers/",note:"This is a copy of my personal database from 10/29/16. You can use this is you don't have a dataset synced with dropbox and want to see the viewer in action."}},_fieldData={_showAll:!1,ZCOMPLETED:{name:"Completed",display:"boolean"},ZLOCATION:{name:"Location"},ZPLATFORM:{name:"Platform"},ZFORMAT:{name:"Format"},ZDEVELOPER:{name:"Developer"},ZPUBLISHER:{name:"Publisher"},ZRATED:{name:"Rated"},ZRELEASEDATE:{name:"Release Date",display:"date"},ZCONDITION:{name:"Condition"},ZPRICE:{name:"Price",display:"price"},ZPURCHASEDAT:{name:"Purchased At"},ZPURCHASEDON:{name:"Purchase On",display:"date"},ZPAID:{name:"Price Paid",display:"price"},ZUPC:{name:"UPC"},ZBORROWEDBY:{name:"Borrowed By"},ZBORROWEDON:{name:"Borrowed on",display:"date"},ZSUMMARY:{name:"Summary",display:"longtext"},ZCOMMENTS:{name:"Comments",display:"longtext"},ZCUSTOM1:{name:""},ZCUSTOM2:{name:""},ZCUSTOM3:{name:""},ZCUSTOM4:{name:""},ZCUSTOM5:{name:""},ZCUSTOM6:{name:""},ZCUSTOM7:{name:""},ZCUSTOM8:{name:""},ZCUSTOM9:{name:""},ZCUSTOM10:{name:""},ZCUSTOMCHECKBOX1:{name:"",display:"boolean"},ZCUSTOMCHECKBOX2:{name:"",display:"boolean"},ZCUSTOMDATE1:{name:"",display:"date"},ZCUSTOMDATE2:{name:"",display:"date"},ZCUSTOMTAG1:{name:""},ZCUSTOMTAG2:{name:""},ZCUSTOMTEXT1:{name:""},ZCUSTOMTEXT2:{name:""},ZDATEADDED:{name:"Date Added",display:"datetime"},ZDATEEDITED:{name:"Date Edited",display:"datetime"}},_pediaviewerConst={doghouseIDStart:1e9,macEpochOffset:9783072e5},_db={hasNotBeenLoaded:!0},_platforms=[],_currentListPosition=window.scrollY;window.onscroll=function(){""==window.location.hash.replace("#","")&&""==document.body.className&&(_currentListPosition=window.scrollY)},window.onhashchange=hashWatcher;var componentDidMountGlobal=function e(){document.body.className="",null!=_currentListPosition&&void 0!=_currentListPosition&&""==window.location.hash.replace("#","")?window.scroll(0,_currentListPosition):window.scroll(0,0)},Error404=React.createClass({displayName:"Error404",render:function e(){return React.createElement("div",null,React.createElement("h1",null,"Page Not found."),React.createElement("p",null,"The requested page, ",window.location.hash.substr(1).split(/-?\d+/)[0],", could not be found."),React.createElement("p",null,"Would like to go back to the ",React.createElement("a",{href:"#"},"home page")," or reset things from the ",React.createElement("a",{href:"#settings"},"settings page"),"?"))},componentDidMount:componentDidMountGlobal}),SelectSource=React.createClass({displayName:"SelectSource",render:function e(){var t="";return""!=_source.static.note&&(t=React.createElement("span",{className:"static-load-note"},_source.static.note)),React.createElement("div",{className:"select-source-page"},React.createElement("h1",null,"Select a Data Source"),React.createElement("p",null,"Gamepedia viewer can load your database from your Dropbox account. It's suggested that you use this method so the data is always up to date. If you do not have your Gamepedia data synced with Dropbox you can learn how to to that in the ",React.createElement("a",{href:"https://www.bruji.com/help/gamepedia/configure/database.html",target:"_blank"},"Gamepedia Help"),"."),React.createElement("p",{className:"source-link link-dropbox"},React.createElement("a",{href:"https://www.dropbox.com/oauth2/authorize?response_type=token&client_id="+_source.dropbox.appKey+"&redirect_uri="+_source.dropbox.oAuthRedirect},"Log in with Dropbox")),React.createElement("p",null,"If you don't have your Gamepedia database synced with dropbox, or don't have a Gamepedia database at all, you can load one from a static location. This database may be out of date, for the latest data you should sync your database with dropbox."),React.createElement("p",{className:"source-link link-static"},React.createElement("a",{href:"#load-static"},"Load Static Database"),t),React.createElement("p",null,'Your selection will be saved and you shouldn\'t be asked again. If you would like to change your selection in the future you can do so on the "Settings" page, a link to which is located at the bottom of the page.'))},componentDidMount:componentDidMountGlobal}),MainView=React.createClass({displayName:"MainView",getInitialState:function e(){var t={filters:{search:"",platform:"~All",list:"0,1"}};if(void 0!=localStorage.current_filters)try{t.filters=JSON.parse(localStorage.current_filters)}catch(e){}return t},updateFilter:function e(t){var a=this.state;a.filters[t.target.id]=t.target.value,localStorage.current_filters=JSON.stringify(a.filters),this.setState(a)},render:function e(){return React.createElement("div",null,React.createElement("div",{id:"list-view"},React.createElement(Filter,{updateFilter:this.updateFilter,filters:this.state.filters}),React.createElement(List,{filters:this.state.filters})),React.createElement(Footer,null))},componentDidMount:componentDidMountGlobal}),Filter=React.createClass({displayName:"Filter",render:function e(){return React.createElement("div",{id:"filter-box"},React.createElement("label",{htmlFor:"search"},"Search",React.createElement("input",{ref:"search",type:"text",id:"search",onChange:this.props.updateFilter,value:this.props.filters.search})),React.createElement("label",{htmlFor:"platform"},"Platform",React.createElement("select",{ref:"platform",id:"platform",onChange:this.props.updateFilter,value:this.props.filters.platform},React.createElement("option",{value:"~All"},"All Platforms"),_platforms.map(function(e,t){return React.createElement("option",{key:e,value:e},e)}))),React.createElement("label",{htmlFor:"list"},"Listed In",React.createElement("select",{ref:"list",id:"list",onChange:this.props.updateFilter,value:this.props.filters.list},React.createElement("option",{value:"0,1"},"All Owned"),React.createElement("option",{value:"1"},"On Loan"),React.createElement("option",{value:"0"},"On Hand"),React.createElement("option",{value:"2"},"Wishlist"))))}}),List=React.createClass({displayName:"List",openDetailsPage:function e(t,a){var o="title-"+a.ZUID+"-"+a.ZTITLE.toLowerCase().replace(/[^\d\w]+/g,"-");t.ctrlKey||t.altKey||t.metaKey?window.open(window.location.href.replace("#","")+"#"+o):window.location.hash=o},render:function e(){for(var t=this.props.filters.search.replace(/([\[\]&_\\/%])/g,"\\$1"),a=this.props.filters.platform.replace(/([\[\]&_\\/%])/g,"\\$1"),o=this.props.filters.list.replace(/([\[\]&_\\/%])/g,"\\$1"),n=_db.prepare('select `ZUID`,`ZCOMPLETED`,`ZTITLE`,`ZEDITION`,`ZPLATFORM` from `ZENTRY` where `ZTITLE` like "%'+t+'%" escape "\\" '+("~All"!=a?' and  `ZPLATFORM` = "'+a+'"':"")+" and `ZSTATUS` in("+o+") and `ZUID`<"+_pediaviewerConst.doghouseIDStart+" order by `ZTITLE` COLLATE NOCASE"),r=[];n.step();)r.push(n.getAsObject());return React.createElement("ul",{id:"title-list",className:"~All"!=this.props.filters.platform?"platformed":""},r.map(function(e){return React.createElement("li",{key:e.ZUID,className:1==e.ZCOMPLETED?"completed":""},React.createElement("a",{href:"#title-"+e.ZUID+"-"+e.ZTITLE.toLowerCase().replace(/[^\d\w]+/g,"-")},React.createElement("b",null,e.ZTITLE),React.createElement("i",null,e.ZEDITION),React.createElement("span",{className:"plat"},e.ZPLATFORM),React.createElement("div",{style:{clear:"both"}})))}.bind(this)))}}),Footer=React.createClass({displayName:"Footer",render:function e(){var t=_db.prepare('select count("a") as "entries" from `ZENTRY` where `ZSTATUS` in(0,1) and `ZUID`<'+_pediaviewerConst.doghouseIDStart+' group by("a") COLLATE NOCASE');t.step();var a=t.getAsObject().entries,t=_db.prepare("select * from `ZENTRY` where `ZSTATUS` in(0,1) and `ZUID`<"+_pediaviewerConst.doghouseIDStart+" order by `ZUID` desc limit 1");t.step();var o=t.getAsObject();return React.createElement("div",{id:"footer"},React.createElement("p",{className:"entries-line"},"Currently ",a," in collection."),React.createElement("p",{className:"nav-links"},React.createElement("a",{href:"#",className:"footer-link"},"Main List"),"–",React.createElement("a",{href:"#settings",className:"footer-link"},"Settings"),"–",React.createElement("a",{href:"#title-"+o.ZUID+"-"+o.ZTITLE.toLowerCase().replace(/[^\d\w]+/g,"-"),className:"footer-link"},"Latest Entry")),React.createElement("p",null,React.createElement("a",{href:"https://github.com/pgooch/GamepediaViewer",className:"github-link",target:"_blank"},"Fork Gamepedia Viewer on GitHub.")))}}),SettingsView=React.createClass({displayName:"SettingsView",getInitialState:function e(){var t={};return Object.keys(localStorage).map(function(e){try{var a=JSON.parse(localStorage[e]);t[e]=a}catch(a){t[e]=localStorage[e]}}.bind(t)),t},updateSettings:function e(t){var a=this.state,o=t.target.getAttribute("name").split("-"),n=o[0];o=o[1];var r={},l=t.target.value;"checkbox"!=t.target.type&&"radio"!=t.target.type||(l=t.target.checked),void 0==a[n]&&(a[n]={}),r=a[n],r[o]=l,a[n][o]=l,console.log(r),localStorage[n]=JSON.stringify(r),this.setState(a)},updateDataSource:function e(){confirm("Are you sure you want to change your data source?\n\nYou may be required to re-link Gamepeida Viewer with your dropbox account.")&&(localStorage.removeItem("database_source"),window.location.hash="select-source",window.location.reload())},render:function e(){return React.createElement("div",{id:"settings"},React.createElement("h1",null,"Settings"),React.createElement("h2",null,"Custom Field Names"),React.createElement("p",{className:"setting-note"},"These are the labels that will be used for custom fields. If these are left blank they will not be displayed even if there is data for the title."),React.createElement("div",{className:"settings-fields"},Object.keys(_fieldData).map(function(e){if("ZCUSTOM"==e.substr(0,7)){var t="Custom "+e.substr(7).toLowerCase().replace(/(\d+)/," $1").replace(/\b[a-z]/g,function(e){return e.toUpperCase()});return React.createElement("label",{htmlFor:"custom-field-name-"+e,key:"custom-field-name-"+e},t,React.createElement("input",{type:"text",name:"custom_field_names-"+e,id:"custom-field-name-"+e,defaultValue:void 0!=this.state.custom_field_names?this.state.custom_field_names[e]:"",placeholder:""!=_fieldData[e].name?_fieldData[e].name:"",onChange:this.updateSettings}))}}.bind(this)),React.createElement("label",{className:"checkbox",htmlFor:"show-with-default"},React.createElement("input",{type:"checkbox",name:"custom_field_names-showWithoutNames",id:"show-with-default",value:"yes",defaultChecked:void 0!=this.state.custom_field_names&&this.state.custom_field_names.showWithoutNames,onChange:this.updateSettings})," Show custom fields with default names when a custom name has not been set.")),React.createElement("h2",null,"Change Data Source"),React.createElement("p",{className:"setting-note"},"If you would like to chage the data source from the currently selected ",localStorage.database_source," one you can do so by click the button below."),React.createElement("p",null,React.createElement("input",{type:"button",className:"reset-button",value:"Reset Data Source",onClick:this.updateDataSource})),React.createElement(Footer,null))},componentDidMount:componentDidMountGlobal}),DetailView=React.createClass({displayName:"DetailView",render:function e(){var t=_db.prepare("select * from `ZENTRY` where `ZUID` = "+window.location.hash.match(/-(\d+)-/)[1]);t.step();var a=t.getAsObject();return void 0==a.Z_PK?React.createElement("div",{id:"details-container"},React.createElement("h1",null,"404",React.createElement("i",null,"Could not find the requested title.")),React.createElement(Footer,null)):React.createElement("div",{id:"details-container"},React.createElement("h1",null,a.ZTITLE," ",React.createElement("i",null,a.ZEDITION)),React.createElement("ul",{className:"detail-items"},Object.keys(a).map(function(e){var t=[],o=e,n=a[e],r=localStorage.custom_field_names;if(void 0!=r)try{r=JSON.parse(r)}catch(e){r={}}else r={};if(void 0!=_fieldData[e]?o=_fieldData[e].name:t.push("no-key hide-field"),void 0!=r[e]&&""!=r[e]?o=r[e]:void 0!=_fieldData[e]&&""!=_fieldData[e].name||(void 0!=r.showWithoutNames&&1==r.showWithoutNames?o="Custom "+e.substr(7).toLowerCase().replace(/(\d+)/," $1").replace(/\b[a-z]/g,function(e){return e.toUpperCase()}):t.push("no-key no-custom-value-key hide-field")),""!=n&&null!=n&&0!=n||t.push("no-value hide-field"),void 0!=_fieldData[e]&&null!=n)switch(_fieldData[e].display){case"boolean":n=1==n?"Yes":"No";break;case"price":n="$"+n.replace(/^\$?/,"");break;case"longtext":n=React.createElement("div",{className:"long-text"},n),t.push("long-text");break;case"date":case"datetime":var l=new Date(1e3*n+_pediaviewerConst.macEpochOffset);n=l.toLocaleString(),"date"==_fieldData[e].display&&(n=n.replace(/, .*/,""));break;case"cover":n="Images all all sorts of fucked right now"}return t.push("col-"+e),React.createElement("li",{className:t.join(" "),key:"detail "+e},React.createElement("b",null,o),React.createElement("span",null,n))})),React.createElement(DetailCoverImage,{titleID:window.location.hash.match(/-(\d+)-/)[1]}),React.createElement(Footer,null))},componentDidMount:componentDidMountGlobal}),DetailCoverImage=React.createClass({displayName:"DetailCoverImage",getInitialState:function e(){return{id:this.props.titleID,url:"",found:!1}},componentWillMount:function e(){if("dropbox"==localStorage.database_source)var t="https://api.dropboxapi.com/2/files/get_temporary_link",a=JSON.stringify({path:localStorage.covers_dir_path+this.props.titleID+".jpg"});else{var t=localStorage.covers_dir_path+this.props.titleID+".jpg";this.setState({url:t})}var o=new XMLHttpRequest;o.addEventListener("load",function(e){if(4==e.target.readyState&&200==e.target.status)if("dropbox"==localStorage.database_source)try{var t=JSON.parse(e.target.response);this.setState({url:t.link}),this.setState({found:!0})}catch(e){this.setState({found:!1})}else this.setState({found:!0});else this.setState({found:!1})}.bind(this)),o.open("POST",t),o.setRequestHeader("Authorization","Bearer "+localStorage.dropbox_access_token),o.setRequestHeader("Content-Type","application/json"),o.send(a)},render:function e(){return this.state.found?React.createElement("div",null,React.createElement("img",{src:this.state.url,alt:"Cover Image",className:"cover-image"})):React.createElement("div",null)}});initialize();